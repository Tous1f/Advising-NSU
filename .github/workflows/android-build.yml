name: Build Android APK (debug)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Android SDK commandline tools
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9123335_latest.zip -O /tmp/cmdline.zip
          unzip -q /tmp/cmdline.zip -d /tmp/cmdline
          mv /tmp/cmdline/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=${ANDROID_SDK_ROOT} --licenses || true

      - name: Install necessary Android platforms and build-tools
        run: |
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=${ANDROID_SDK_ROOT} "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Install npm dependencies
        run: npm ci

      - name: Add Android via Capacitor (if needed)
        run: |
          npx cap --version || npm install @capacitor/cli @capacitor/core --no-save
          if [ ! -d "android" ]; then npx cap add android --web-dir=.; fi

      - name: Copy web assets to Android
        run: npx cap copy android

      - name: Build Android debug APK
        working-directory: android
        run: ./gradlew assembleDebug -x lint --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: batsched-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
