name: Build Android APK (debug)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up Android SDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
          
      - name: Install Android SDK
        run: |
          mkdir -p ${ANDROID_HOME}/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip commandlinetools-linux-9477386_latest.zip
          mv cmdline-tools ${ANDROID_HOME}/cmdline-tools/latest
          rm commandlinetools-linux-9477386_latest.zip
          yes | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --licenses || true
          ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;33.0.2" "platforms;android-33"

      - name: Install npm dependencies
        run: npm ci || npm install

      - name: Add Android via Capacitor (if needed)
        run: |
          npx cap --version || npm install @capacitor/cli @capacitor/core @capacitor/android --no-save
          if [ ! -d "android" ]; then npx cap add android --web-dir=.; fi

      - name: Copy and sync web assets to Android
        run: |
          npx cap copy android
          npx cap sync android || true

      - name: Build Android debug APK
        working-directory: android
        run: |
          chmod +x ./gradlew
          ./gradlew assembleDebug -x lint --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: batsched-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
